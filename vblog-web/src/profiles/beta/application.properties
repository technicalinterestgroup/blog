#--------------------------------- common env start  -----------------------------#
app.env.name = @build.env.name@
app.project.name = @project.artifactId@
app.project.group = @project.groupId@
app.version = @project.version@
app.project.description = @project.description@
#--------------------------------- common env end  -----------------------------#
#--------------------------------- bootstrap start  -----------------------------#
spring.profiles.active=beta
server.context-path=/vblog
#端口
server.port=8082
#--------------------------------- bootstrap end  -----------------------------#
#--------------------------------- log start  -----------------------------#
logging.config=classpath:config/logback.xml
#--------------------------------- log end  -----------------------------#

#--------------------------------- mysql start  -----------------------------#
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://47.104.252.137:3306/blog
spring.datasource.username=root
spring.datasource.password=Yuting061092

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.minIdle=8
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#--------------------------------- mysql end  -----------------------------#

#--------------------------------- redis start  -----------------------------#
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=47.104.252.137
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.maxTotal=50
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.maxIdle=10
# 连接池中的最小空闲连接
spring.redis.minIdle=10
# 连接超时时间（毫秒）
spring.redis.timeout=1000

spring.redis.testOnBorrow = true
#--------------------------------- redis end  -----------------------------#

#--------------------------------- mybatis start  -----------------------------#
# Mybatis配置
mybatis.mapperLocations=classpath:mapper/*.xml
mybatis.configLocation=classpath:config/mybatis.xml
#--------------------------------- mybatis end  -----------------------------#

#--------------------------------- mail start  -----------------------------#
#邮箱
spring.mail.host=smtp.126.com
spring.mail.username=technicalinterestg@126.com
spring.mail.password=123qweasd
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ssl 配置
spring.mail.port=465
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.imap.ssl.socketFactory.fallback=false
spring.mail.properties.mail.smtp.ssl.socketFactory.class=com.technicalinterest.group.service.util.MailSSLSocketFactory

#--------------------------------- mail end  -----------------------------#
#出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false
#文件存储路径
file_path=/home/default/vblog

#服务地址
server=http://www.littletree.xyz
#账号激活地址
activation_web_url=http://www.littletree.xyz/
#重置密码地址
reset_web_url=http://www.littletree.xyz/
#文章摘要字符数
submit_length=50
#发布文章分数
article_jf=5
#热门文章默认查询条数
article_limit=5
#邮件过期时间
activation_time=86400
#登录过期时间
login_time=1800
#验证码过期时间
img_time=300
#登录错误次数
login_error_times=6
#锁住用户登录时间
lock_user_time=120
#每秒访问限制次数
request_limit_times=6
#ip屏蔽时间
ip_lock_time=120
